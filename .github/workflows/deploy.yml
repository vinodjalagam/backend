---
name: Blue-Green Deployment with Docker
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to Blue Environment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: >
          echo "$SSH_PRIVATE_KEY" > private_key.pem

          chmod 600 private_key.pem

          # Ensure the directory exists

          ssh -i private_key.pem $USERNAME@$HOST "mkdir -p /home/$USERNAME/backend-blue"

          # Copy files to the VM

          scp -i private_key.pem -r ./* $USERNAME@$HOST:/home/$USERNAME/backend-blue/

          # Run commands on the VM

          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            cd /home/$USERNAME/backend-blue
            sudo apt update
            sudo apt install docker.io -y
            sudo docker build -t backend-blue .
            sudo docker stop backend-blue || true
            sudo docker rm backend-blue || true
            sudo docker run -d --name backend-blue -p 8085:8085 backend-blue
          EOF
      - name: Verify Blue Environment
        run: curl --fail http://${{ secrets.HOST }}:8085/sayHello
      - name: Switch Traffic to Blue Environment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          USERNAME: ${{ secrets.USERNAME }}
          HOST: ${{ secrets.HOST }}
        run: >
          echo "$SSH_PRIVATE_KEY" > private_key.pem

          chmod 600 private_key.pem

          # Upload Nginx configuration

          scp -i private_key.pem nginx-blue.conf $USERNAME@$HOST:/tmp/nginx-blue.conf

          # Apply Nginx configuration

          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            sudo mv /tmp/nginx-blue.conf /etc/nginx/sites-available/default
            sudo ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
            sudo nginx -t
            sudo systemctl reload nginx
          EOF
      - name: Clean Up Green Environment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          # Shut down the green environment
          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            sudo docker stop backend-green || true
            sudo docker rm backend-green || true
          EOF
