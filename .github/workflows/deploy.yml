---
name: Blue-Green Deployment with Docker Compose
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2
      - name: Build and push Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: >
          sudo apt-get update
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

          docker build -t $DOCKER_USERNAME/my-node-app:latest .

          docker push $DOCKER_USERNAME/my-node-app:latest
      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 22 ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Deploy Docker Compose Blue environment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/my-node-app:latest
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            docker-compose -f docker-compose.blue.yml pull
            docker-compose -f docker-compose.blue.yml up -d
          EOF
      - name: Wait for Blue environment to be ready
        run: sleep 30
      - name: Verify Blue deployment
        run: curl --fail http://${{ secrets.HOST }}:8081/sayHello
      - name: Switch traffic to Blue environment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            sudo sed -i 's/8082/8081/' /etc/nginx/sites-available/default
            sudo systemctl restart nginx
          EOF
      - name: Verify traffic switch to Blue
        run: curl --fail http://${{ secrets.HOST }}/sayHello
      - name: Clean up old Green environment (Optional)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem $USERNAME@$HOST << 'EOF'
            docker-compose -f docker-compose.green.yml down
          EOF
