---
name: Blue-Green Deployment
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Install dependencies
        run: npm install
      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to VM
        env:
          SSH_PRIVATE_KEY_1: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST_1: ${{ secrets.HOST }}
          SSH_USERNAME_1: ${{ secrets.USERNAME }}
        run: >
          echo "$SSH_PRIVATE_KEY_1" > private_key.pem

          chmod 600 private_key.pem

          ACTIVE_ENV=$(ssh -i private_key.pem $SSH_USERNAME_1@$SSH_HOST_1 'if [ -d /home/$SSH_USERNAME_1/backend-green ]; then echo "blue"; else echo "green"; fi')

          # Determine non-active environment

          if [ "$ACTIVE_ENV" == "blue" ]; then
            DEPLOY_ENV="green"
          else
            DEPLOY_ENV="blue"
          fi

          ssh -i private_key.pem $SSH_USERNAME_1@$SSH_HOST_1 "mkdir -p /home/$SSH_USERNAME_1/backend-$DEPLOY_ENV"

          scp -i private_key.pem -r ./* $SSH_USERNAME_1@$SSH_HOST_1:/home/$SSH_USERNAME_1/backend-$DEPLOY_ENV/

          ssh -i private_key.pem $SSH_USERNAME_1@$SSH_HOST_1 << EOF
            cd /home/$SSH_USERNAME_1/backend-$DEPLOY_ENV
            sudo apt update
            sudo apt install npm -y
            sudo npm install -g pm2 -y
            if [ -f package.json ]; then
              npm install
            else
              echo "package.json not found!"
              exit 1
            fi
            if [ -f index.js ]; then
              pm2 stop backend-$DEPLOY_ENV || true
              pm2 start index.js --name backend-$DEPLOY_ENV --watch
            else
              echo "index.js not found!"
              exit 1
            fi
          EOF
      - name: Configure Nginx
        env:
          SSH_PRIVATE_KEY_1: ${{ secrets.SSH_PRIVATE_KEY_1 }}
          SSH_USERNAME_1: ${{ secrets.SSH_USERNAME_1 }}
          SSH_HOST_1: ${{ secrets.SSH_HOST_1 }}
        run: >
          echo "$SSH_PRIVATE_KEY_1" > private_key.pem

          chmod 600 private_key.pem

          ACTIVE_ENV=$(ssh -i private_key.pem $SSH_USERNAME_1@$SSH_HOST_1 'if [ -d /home/$SSH_USERNAME_1/backend-green ]; then echo "blue"; else echo "green"; fi')
